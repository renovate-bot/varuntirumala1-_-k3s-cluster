---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: gatus
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.9@sha256:170970a909f892149cbf99be8d86c26f0090bc7d2fbd1c34dd770b4bf7e08458
            imagePullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: gatus-secret
          02-config-sync:
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.25.2@sha256:cb4c638ffb1fa1eb49678e0f0423564b39254533f63f4ca6a6c24260472e0c4f
            imagePullPolicy: IfNotPresent
            env:
              - { name: FOLDER, value: /config }
              - { name: LABEL, value: gatus.io/enabled }
              - { name: NAMESPACE, value: ALL }
              - { name: RESOURCE, value: both }
              - { name: UNIQUE_FILENAMES, value: "true" }
              - { name: METHOD, value: LIST }
            volumeMounts:
              - { name: config, mountPath: /config }
        containers:
          main:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.6.0@sha256:140f28f5bfdf6429cfc0408e4a5820f7b25b23b9becdd9cf22d1f5adcd0e8cd4
            env:
              TZ: America/New_York
              GATUS_CONFIG_PATH: /config
              CUSTOM_WEB_PORT: &port 80
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 256M
              limits:
                memory: 512M
          config-sync:
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.25.2@sha256:cb4c638ffb1fa1eb49678e0f0423564b39254533f63f4ca6a6c24260472e0c4f
            imagePullPolicy: IfNotPresent
            env:
              - { name: FOLDER, value: /config }
              - { name: LABEL, value: gatus.io/enabled }
              - { name: NAMESPACE, value: ALL }
              - { name: RESOURCE, value: both }
              - { name: UNIQUE_FILENAMES, value: "true" }
              - { name: METHOD, value: WATCH }
            volumeMounts:
              - { name: config, mountPath: /config }
            resources:
              requests:
                cpu: 10m
                memory: 10M
              limits:
                memory: 128M
    service:
      main:
        ports:
          http:
            port: *port
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      main:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          cert-manager.io/cluster-issuer: gts-production
          cert-manager.io/private-key-algorithm: ECDSA
          cert-manager.io/private-key-size: "384"
          nginx.ingress.kubernetes.io/auth-url: http://authelia.default.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}
        hosts:
          - host: &host status.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: gatus-cert
    serviceAccount:
      create: true
      name: gatus

    persistence:
      config:
        enabled: true
        type: emptyDir
      config-file:
        enabled: true
        type: configMap
        name: gatus-configmap
        globalMounts:
          - path: /config/config.toml
            subPath: config.toml
            readOnly: true
