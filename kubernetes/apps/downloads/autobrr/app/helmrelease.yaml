---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: autobrr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: volsync
      namespace: volsync
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            fsGroup: 100
            supplementalGroups:
              - 34
              - 100
              - 10000
            fsGroupChangePolicy: "OnRootMismatch"
        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.9@sha256:8d5134c75858d0e4672c5301cf225896be5347564cc3b79cab9dd38e37f0ea94
            envFrom: &envFrom
              - secretRef:
                  name: autobrr-secret
        containers:
          main:
            image:
              repository: ghcr.io/autobrr/autobrr
              tag: v1.31.0@sha256:4c915f2710dedfdb9030f886cfb0714013c65d2463b703c2823fed986d97866e
            env:
              AUTOBRR__CHECKFORUPDATES: "false"
              AUTOBRR__HOST: 0.0.0.0
              AUTOBRR__PORT: &port 80
              AUTOBRR__LOGLEVEL: DEBUG
            envFrom: *envFrom
            securityContext:
              runAsUser: 568
              runAsGroup: 100

          gluetun:
            image:
              repository: docker.io/qmcgaw/gluetun
              tag: latest@sha256:8bb0ea2f18624dcf86bd5b13c0e781d2e72a6b0a3f32fbc0198d5663df65295f
            securityContext:
              privileged: true
            networkPolicy:
              enabled: false
            env:
              - name: VPN_INTERFACE
                value: wg0
              - name: VPN_ENDPOINT_PORT
                value: "51820"
              - name: FIREWALL_INPUT_PORTS
                value: "80"
              - name: FIREWALL_OUTBOUND_SUBNETS
                # Allow access to k8s subnets
                value: "10.42.0.0/16,10.43.0.0/16"
              - name: SHADOWSOCKS
                value: "on"
              - name: DOT
                value: "off"
              - name: DNS_SERVER
                value: "127.0.0.2"
              - name: WIREGUARD_PRIVATE_KEY
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: WIREGUARD_PRIVATE_KEY
              - name: WIREGUARD_PUBLIC_KEY
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: WIREGUARD_PUBLIC_KEY
              - name: WIREGUARD_ADDRESSES
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: WIREGUARD_ADDRESSES
              - name: VPN_SERVICE_PROVIDER
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: VPN_SERVICE_PROVIDER
              - name: VPN_TYPE
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: VPN_TYPE
              - name: VPN_ENDPOINT_IP
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: VPN_ENDPOINT_IP

          dnsdist:
            image:
              repository: docker.io/powerdns/dnsdist-18
              tag: 1.8.1@sha256:545048d9d34767f707d122103ffbfccc2e40d9b459ff398164ed985db8631560

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        type: emptyDir
      dnsdist-config:
        type: configMap
        name: autobrr-dnsdist
        advancedMounts:
          main:
            dnsdist:
              - path: /etc/dnsdist/dnsdist.conf
                subPath: dnsdist.conf
                readOnly: true
      autobrr-resolv-config:
        type: configMap
        name: autobrr-resolv
        advancedMounts:
          main:
            main:
              - path: /etc/resolv.conf
                subPath: resolv.conf
                readOnly: true
      gluetun-data:
        type: emptyDir
        advancedMounts:
          main:
            gluetun:
              - path: /tmp/gluetun
            port-forward:
              - path: /tmp/gluetun
                readOnly: true
      config-file:
        enabled: true
        type: configMap
        name: autobrr-configmap
        subPath: config.toml
        mountPath: /config/config.toml
        readOnly: true
    resources:
      requests:
        memory: 250Mi
        cpu: 10m
      limits:
        memory: 500Mi
