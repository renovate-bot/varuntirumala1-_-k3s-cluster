---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cloudflared
  namespace: networking
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: cloudflared

        containers:
          main:
            image:
              repository: docker.io/cloudflare/cloudflared
              tag: 2023.8.2@sha256:680085f76a59c53b7827a170d43dbdc9ef87235af6c39c9d4d028fde38359233
            env:
              NO_AUTOUPDATE: "true"
              TUNNEL_CRED_FILE: /etc/cloudflared/creds/credentials.json
              TUNNEL_METRICS: 0.0.0.0:8080
              TUNNEL_TRANSPORT_PROTOCOL: quic
              TUNNEL_POST_QUANTUM: true
              TUNNEL_ID:
                valueFrom:
                  secretKeyRef:
                    name: cloudflared-secret
                    key: TUNNEL_ID
            args:
              - tunnel
              - --config
              - /etc/cloudflared/config/config.yaml
              - run
              - "$(TUNNEL_ID)"
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: 8080
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 6m
                memory: 105Mi
              limits:
                memory: 105Mi
    service:
      main:
        ports:
          http:
            port: 8080
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 30s
    persistence:
      config:
        enabled: true
        type: configMap
        name: cloudflared-configmap
        subPath: config.yaml
        mountPath: /etc/cloudflared/config/config.yaml
        readOnly: true
      creds:
        enabled: true
        type: secret
        name: cloudflared-secret
        subPath: credentials.json
        mountPath: /etc/cloudflared/creds/credentials.json
        readOnly: true
